;;**********************************************************************
;;
;; Title:       FormatTransViewEventArgs.dbc
;;
;; Type:        Class
;;
;; Description: Class defining the FormatTransView event handling argument
;;
;; Author:      Richard C. Morris, Synergex Professional Services Group
;;
;; Copyright    © 2009 Synergex International Corporation.  All rights reserved.
;;
;; WARNING:     All content constituting or related to this code ("Code") is the
;;              property of Synergex International Corporation ("Synergex") and
;;              is protected by U.S. and international copyright laws.
;;              If you were given this Code by a Synergex employee then you may
;;              use and modify it freely for use within your applications.
;;
;;              However, you may use the Code only for your personal use.
;;              Any other use, unless otherwise authorized in writing by
;;              Synergex is strictly prohibited.  You may not under any
;;              circumstances distribute this Code, or any modified version
;;              or part of this Code, to any third party without first
;;              obtaining written permission to do so from Synergex.
;;              In using this Code you accept that it is provided as is,
;;              and without support or warranty of any kind.
;;
;;              Neither Synergex nor the author accept any responsibility
;;              for any losses or damages of any nature which may arise
;;              from the use of this Code.  This header information must
;;              remain unaltered in the Code at all times.  Possession
;;              of this Code, or any modified version or part of this Code,
;;              indicates your acceptance of these terms.
;;
;;***********************************************************************************

namespace SynPSG.Core.DataEntities

    ;;;<summary>
    ;;;This class defines the event arguments for the FormatTransView event handler
    ;;;</summary>
    ;;;<remarks>
    ;;;using te FormatTransView event you can customise te data written to the transaction
    ;;;viewer.
    ;;;</remarks>
    public sealed class FormatTransViewEventArgs

        ;;private members
        private mTransView          ,string
        private mDataArea           ,string

        ;;;<summary>
        ;;;Defalt constructor.
        ;;;</summary>
        ;;;<remarks>
        ;;;populate the private member fields
        ;;;</remarks>
        ;;;<param name=transactionView>Pass the default view</param>
        ;;;<param name=dataArea>Pass the modified record data area</param>
        public method FormatTransViewEventArgs
            in  req transactionView                 ,string
            in  req dataArea                        ,string
            endparams
        proc
            ;;store the passed data
            mTransView = transactionView
            mDataArea = dataArea

            mreturn
        endmethod

        ;;;<summary>
        ;;;TransactionView property.  Read/write access to the data that will
        ;;;be added to the transction view log
        ;;;</summary>
        ;;;<remark>
        ;;;The event handler should populate this property the required data to display
        ;;;in the transaction viewer
        ;;;</remark>
        public property TransactionView    ,string
            method get
            proc
                mreturn mTransView
            endmethod

            method set
            proc
                mTransView = value
            endmethod
        endproperty

        ;;;<summary>
        ;;;DataArea property contains the synergy dat area for te current record
        ;;;being processed
        ;;;</summary>
        ;;;<remark>
        ;;;The data within this property can used to access thye synergy record contents
        ;;;and popoulate the transaction view data
        ;;;</remark>
        public property DataArea    ,string
            method get
            proc
                mreturn mDataArea
            endmethod
        endproperty

    endclass

endnamespace
