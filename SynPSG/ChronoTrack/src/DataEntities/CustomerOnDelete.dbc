;;**********************************************************************
;;
;; Title:       CustomerDataConsistency.dbc
;;
;; Type:        Class
;;
;; Description: Base Class defining the CustomerDataConsistency event handling class
;;
;; Author:      Richard C. Morris, Synergex Professional Services Group
;;
;; Copyright    © 2009 Synergex International Corporation.  All rights reserved.
;;
;; WARNING:     All content constituting or related to this code ("Code") is the
;;              property of Synergex International Corporation ("Synergex") and
;;              is protected by U.S. and international copyright laws.
;;              If you were given this Code by a Synergex employee then you may
;;              use and modify it freely for use within your applications.
;;
;;              However, you may use the Code only for your personal use.
;;              Any other use, unless otherwise authorized in writing by
;;              Synergex is strictly prohibited.  You may not under any
;;              circumstances distribute this Code, or any modified version
;;              or part of this Code, to any third party without first
;;              obtaining written permission to do so from Synergex.
;;              In using this Code you accept that it is provided as is,
;;              and without support or warranty of any kind.
;;
;;              Neither Synergex nor the author accept any responsibility
;;              for any losses or damages of any nature which may arise
;;              from the use of this Code.  This header information must
;;              remain unaltered in the Code at all times.  Possession
;;              of this Code, or any modified version or part of this Code,
;;              indicates your acceptance of these terms.
;;
;;***********************************************************************************
;;
;; ChronoTrack is an application written and managed by the Synergex Professional Services Group.
;;
;;***********************************************************************************

.include "DEF:ChronoTrack.def"

namespace SynPSG.ChronoTrack.DataEntities

    ;;;<summary>
    ;;;event handling class.  Used to allow DataEntity classes to define
    ;;;an event handling class which will be executed a delete within te file
    ;;;is proessed.  The event can then perform data consistency with other files
    ;;;</summary>
    public sealed class CustomerOnDelete extends SynPSG.Core.DataEntities.OnDelete

        ;;;<summary>
        ;;;Method that must be implemented by the DataEntity class when data consistency
        ;;;events are required to be handled.
        ;;;</summary>
        ;;;<param name=sender>DataIO object</param>
        ;;;<param name=e>DataConsistencyEventArgs</param>
        public override method EventMethod   ,void
            in      req sender              ,@SynPSG.Core.DataEntities.SDMSio
            inout   req e                   ,@SynPSG.Core.DataEntities.OnDeleteEventArgs
            endparams

            .include 'customer' repository, stack record = "customer", end

            record
                mContact            ,@CustomerContactDataEntity
                mContract           ,@CustomerContractDataEntity
                mLocation           ,@CustomerLocationDataEntity
            endrecord

        proc
            ;;the implementing code should read through related files and delete
            ;;records that match the primary key segment held in e.KeySegment

            debugInfo("CustomerDataConsistency::EventMethod(): Perform data consistency, key : " + e.KeySegment)

            if (mContact == ^null)
                mContact = new CustomerContactDataEntity(e.NoDotNet, TableView.Full)

            mContact.IO.DeleteAllMatching(e.KeySEgment)

            if (mContract == ^null)
                mContract = new CustomerContractDataEntity(e.NoDotNet, TableView.Full)

            mContract.IO.DeleteAllMatching(e.KeySEgment)

            if (mLocation == ^null)
                mLocation = new CustomerLocationDataEntity(e.NoDotNet, TableView.Full)

            mLocation.IO.DeleteAllMatching(e.KeySEgment)

            mreturn

        endmethod
    endclass

endnamespace
