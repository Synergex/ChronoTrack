;;**********************************************************************
;;
;; Title:       ChronoTrackMaint.dbl
;;
;; Type:        Application
;;
;; Description: Maintenance program hosting .NET forms and objects
;;
;; Author:      Richard C. Morris, Synergex Professional Services Group
;;
;; Copyright    © 2009 Synergex International Corporation.  All rights reserved.
;;
;; Copyright    © 2009 Synergex International Corporation.  All rights reserved.
;;
;; WARNING:     All content constituting or related to this code ("Code") is the
;;              property of Synergex International Corporation ("Synergex") and
;;              is protected by U.S. and international copyright laws.
;;              If you were given this Code by a Synergex employee then you may
;;              use and modify it freely for use within your applications.
;;
;;              However, you may use the Code only for your personal use.
;;              Any other use, unless otherwise authorized in writing by
;;              Synergex is strictly prohibited.  You may not under any
;;              circumstances distribute this Code, or any modified version
;;              or part of this Code, to any third party without first
;;              obtaining written permission to do so from Synergex.
;;              In using this Code you accept that it is provided as is,
;;              and without support or warranty of any kind.
;;
;;              Neither Synergex nor the author accept any responsibility
;;              for any losses or damages of any nature which may arise
;;              from the use of this Code.  This header information must
;;              remain unaltered in the Code at all times.  Possession
;;              of this Code, or any modified version or part of this Code,
;;              indicates your acceptance of these terms.
;;
;;***********************************************************************************
;;
;; ChronoTrack is an application written and managed by the Synergex Professional Services Group.
;;
;;***********************************************************************************


.include "DEF:ChronoTrack.def"

main ChronoTackMaint

.include "DEF:ChronoTrackMacros.def"

;;data elements
record
    country         ,@CountryDataEntity
    state           ,@StateDataEntity
endrecord

;;window manager
record
    wm              ,@WindowManager
endrecord

;;window ID's
record
    winID           ,int
endrecord

;;non-toolkit menu control
.ifdef UINameSpace
;;main menu form
record
    frmMainMenu     ,UIClassMacro(MainMenu)
    menuWinID       ,int
endrecord
.endc

;;general
record
    errFlag         ,boolean
endrecord

.include "WND:tools.def"
.include "DBLDIR:windows.def"

proc

    call programInitialsation

    if (!errFlag) call processMenu

    call programTerminate

    ;;logical end of program
    stop

;;****************************************************************************
programInitialsation,


    ;;program initialisation
    ;;create the window manager object
    debugInfo("program Starting and creating window manager object")
    wm = new WindowManager("EXE:ChronoTrack.ism", "ChronoTrack - Table Maintenance")

    ;;login
    if (errFlag = !LoginForm(wm))
        return

    ;;load the menu columns
    debugInfo("Load menu columns")
    errFlag = wm.LoadMenu("mnuFile", true)
    if (!errFlag) errFlag = wm.LoadMenu("mnuMaint", false)
    if (!errFlag) errFlag = wm.LoadMenu("mnuPrj", false)
    if (!errFlag) errFlag = wm.LoadMenu("mnuHelp", false)

    if (errFlag)
    begin
        debugInfo("unable to load required columns, program terminating")
        u_message("unable to load required columns, program terminating")
    end

    if (!errFlag)
    begin
        ;;create the required static data objects
        debugInfo("Creating static tables")
        try
        begin
            country = new CountryDataEntity(false, TableView.Full)
            country.DataTable.PerformReloadTable=false
            state = new StateDataEntity(false, TableView.Full)
            state.DataTable.PerformReloadTable=false
        end
        catch (e, @Exception)
        begin
            u_message(e.Message)
            errFlag = true
        end
        endtry

    end

.ifdef UINameSpace
.ifndef MICROSOFT_VERSION
    if (!errFlag)
    begin
        ;;load the main menu form
        frmMainMenu = new UINameSpace.MainMenu(wm.SynInteropInstance)
        menuWinID = wm.tkWindow(frmMainMenu, 0, 0, "Main Menu")
        frmMainMenu.Size = wm.FormResize
    end
.endc
.endc

    return

;;****************************************************************************
processMenu,

    wm.ClearFooter()

    repeat
    begin
.ifdef UINameSpace
.ifdef MICROSOFT_VERSION
        m_process()
.else
        wm.processForm(menuWinID)

        wm.HideWindow(menuWinID)
.endc
.else
        m_process()
.endc
        ;;what has the user selected
        using g_entnam select
        ("MB_EXIT", "PRGEXIT"),
        begin
            exitloop
        end
        ("USERMNT"),
            UserMaintenance(wm, country, state)
        ("COUNTRYMNT"),
            CountryMaintenance(wm, country)
        ("STATEMNT"),
            StateMaintenance(wm, state)
        ("FEETYPMNT"),
            FeeTypeMaintenance(wm)
        ("CUSTMNT"),
            CustomerMaintenance(wm, country, state)
        ("RQSTRSC"),
            RequestCreator(wm)
        ("PRJCREATE"),
            ProjectCreator(wm)
        ("APPOPTNS"),
            OptionsMaintenance(wm)
        ("ABOUT"),
            AboutWindow(wm)
        ("CHNGPW"),
            ChangePassword(wm)
        ("PRJCENTR"),
            ProjectCenter(wm)
        endusing
    end

    return

;;****************************************************************************
programTerminate,

    ;;this shuts down the toolit, etc
    wm = ^null

    return

endmain

