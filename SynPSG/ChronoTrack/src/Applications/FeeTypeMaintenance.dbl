;;**********************************************************************
;;
;; Title:       FeeTypeMaintenance.dbl
;;
;; Type:        Application
;;
;; Description: Maintenance program allowing fee_type maintenance
;;
;; Author:      Richard C. Morris, Synergex Professional Services Group
;;
;; Copyright    © 2009 Synergex International Corporation.  All rights reserved.
;;
;; WARNING:     All content constituting or related to this code ("Code") is the
;;              property of Synergex International Corporation ("Synergex") and
;;              is protected by U.S. and international copyright laws.
;;              If you were given this Code by a Synergex employee then you may
;;              use and modify it freely for use within your applications.
;;
;;              However, you may use the Code only for your personal use.
;;              Any other use, unless otherwise authorized in writing by
;;              Synergex is strictly prohibited.  You may not under any
;;              circumstances distribute this Code, or any modified version
;;              or part of this Code, to any third party without first
;;              obtaining written permission to do so from Synergex.
;;              In using this Code you accept that it is provided as is,
;;              and without support or warranty of any kind.
;;
;;              Neither Synergex nor the author accept any responsibility
;;              for any losses or damages of any nature which may arise
;;              from the use of this Code.  This header information must
;;              remain unaltered in the Code at all times.  Possession
;;              of this Code, or any modified version or part of this Code,
;;              indicates your acceptance of these terms.
;;
;;***********************************************************************************
;;
;; ChronoTrack is an application written and managed by the Synergex Professional Services Group.
;;
;;***********************************************************************************

.include "DEF:ChronoTrack.def"

subroutine FeeTypeMaintenance
    in      req wm          ,@WindowManager
    endparams

.include "WND:tools.def"
.include "DEF:ChronoTrackMacros.def"

.if ^variant .eq. 4     ;;for ALL build force this to infragistics
.ifdef UINameSpace
.undefine UINameSpace
.endc
.define UINameSpace   ChronoTrackNetUI.Forms
.define INFRAGISTICS_VERSION
.endc;^variant .eq. 4

literal
    winTitle    ,a* ,"Fee type maintenance"
endliteral

record
.ifdef UINameSpace
    frmFeeTypeMaint    ,UIClassMacro(FeeTypeMaintenance)
.endc
    feeType            ,@FeeTypeDataEntity
    winID              ,int
endrecord

proc

.ifdef UINameSpace
    try
    begin
        wm.Environment(true, "Loading " + winTitle + " objects....")
        wm.DisableMenu("mnuMaint")

        ;;create data entity
        feeType = new FeeTypeDataEntity(false, TableView.Full)

        ;;load the window
        frmFeeTypeMaint = new UINameSpace.FeeTypeMaintenance(wm.SynInteropInstance)

        ;;assign data bindings
        frmFeeTypeMaint.SetDataSource(feeType.ResultsTable())

        winID = wm.tkWindow(frmFeeTypeMaint, 12, 70, winTitle, true)
        frmFeeTypeMaint.Size = wm.FormGetSize(winID)

        TransactionViewer.ClearView()

        repeat
        begin
            wm.processForm(winID)
            using g_entnam select
            ("MB_CANCEL"),
            begin
                exitloop
            end
            ("MB_COMMIT"),
            begin
                ;;commit data if required
                feeType.DataTable.Commit()
                exitloop
            end
            ("MB_EXIT"),
            begin
                exitloop
            end
            (),
            begin
                ;;ignore all other entries
                nop
            end
            endusing
        end

        ;;show any changes made to the database
        TransactionViewer.ShowView(winTitle)

        feeType.DataTable.Cancel()

        wm.Environment(false, "")
    end
    catch (e, @Exception)
    begin
        u_message(e.Message)
    end
    endtry

.endc
    xreturn

endsubroutine

