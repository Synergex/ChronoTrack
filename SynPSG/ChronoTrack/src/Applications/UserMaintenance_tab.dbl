;;**********************************************************************
;;
;; Title:       UserMaintenance.dbl
;;
;; Type:        Application
;;
;; Description: Maintenance program allowing user maintenance
;;
;; Author:      Richard C. Morris, Synergex Professional Services Group
;;
;; Copyright    © 2009 Synergex International Corporation.  All rights reserved.
;;
;; WARNING:     All content constituting or related to this code ("Code") is the
;;              property of Synergex International Corporation ("Synergex") and
;;              is protected by U.S. and international copyright laws.
;;              If you were given this Code by a Synergex employee then you may
;;              use and modify it freely for use within your applications.
;;
;;              However, you may use the Code only for your personal use.
;;              Any other use, unless otherwise authorized in writing by
;;              Synergex is strictly prohibited.  You may not under any
;;              circumstances distribute this Code, or any modified version
;;              or part of this Code, to any third party without first
;;              obtaining written permission to do so from Synergex.
;;              In using this Code you accept that it is provided as is,
;;              and without support or warranty of any kind.
;;
;;              Neither Synergex nor the author accept any responsibility
;;              for any losses or damages of any nature which may arise
;;              from the use of this Code.  This header information must
;;              remain unaltered in the Code at all times.  Possession
;;              of this Code, or any modified version or part of this Code,
;;              indicates your acceptance of these terms.
;;
;;***********************************************************************************
;;
;; ChronoTrack is an application written and managed by the Synergex Professional Services Group.
;;
;;***********************************************************************************

.include "DEF:ChronoTrackApp.def"

.if ^variant .eq. 4
subroutine UserMaintenance_tab
    inout   req pageID      ,int
    in      req tabID       ,int
    in      req wm          ,@WindowManager
    inout   req countryObj  ,@CountryDataEntity
    inout   req stateObj    ,@StateDataEntity
    endparams

.include "WND:tools.def"
.include "DEF:ChronoTrackMacros.def"

.include 'user' repository, record = "userRec" ,end

literal
    winTitle    ,a* ,"User maintenance"
endliteral

static record
    frmUserMaint    ,@ChronoTrackNetUIDX.Forms.UserMaintenance
    user            ,@UserDataEntity
    index           ,int
    result          ,boolean
    edit_mode       ,int
    set_name        ,a15
endrecord

proc

    if (!pageID)
    begin
        ;;we are creating the tab
        frmUserMaint = new ChronoTrackNetUIDX.Forms.UserMaintenance(wm.SynInteropInstance)
        pageID = wm.tkWindow(frmUserMaint, 0, 0, winTitle)

        index = ts_tabset(DTS_WINDOW, tabID, pageID, "UserMaintenance_tab")
        ts_tabset(DTS_ACTIVE, tabID, index)

        frmUserMaint.Size = wm.FormGetSize(pageID)

        ;;create data entity
        user = new UserDataEntity(false, TableView.Full)

        ;;assign data bindings
        frmUserMaint.SetDataSource(user.ResultsTable(TableView.Full), countryObj.ResultsTable(), stateObj.ResultsTable())

        wm.PlaceForm(pageID)

        xreturn
    end

    ;;process the tab

    countryObj.DataTable.PerformReloadTable=true
    stateObj.DataTable.PerformReloadTable=true

    repeat
    begin
        frmUserMaint.SetFocus()
        wm.processForm(pageID)
        using g_entnam select
        ("MB_CANCEL", "MB_EXIT"),
        begin
            ;;delete the tab
            user.DataTable.Cancel()
            call closeDownTab
            exitloop
        end
        ("MB_COMMIT"),
        begin
            ;;commit data if required
            user.DataTable.Commit()
            ;;delete the tab
            call closeDownTab
            exitloop
        end
        ("COUNTRYMNT"),
            CountryMaintenance(wm, countryObj)
        ("STATEMNT"),
            StateMaintenance(wm, stateObj)
        ("TS_"),
            exitloop    ;;let the tab processor handle it
        endusing
    end

    countryObj.DataTable.PerformReloadTable=false
    stateObj.DataTable.PerformReloadTable=false

    xreturn

closeDownTab,
    ;;clear down the tab and it's objects.
    ts_tabset(DTS_REMOVE, tabID, index)
    u_window(D_DELETE, pageID)
    clear pageID
    frmUserMaint = ^null
    user = ^null
    return

endsubroutine
.else
;;this is a stub routine when not building ALL version, which uses tab processing
subroutine UserMaintenance_tab
    inout   req pageID      ,int
    in      req tabID       ,int
    in      req wm          ,@WindowManager
    inout   req countryObj  ,@CountryDataEntity
    inout   req stateObj    ,@StateDataEntity
    endparams
proc
    xreturn
endsubroutine
.endc;;variant .eq. 4
